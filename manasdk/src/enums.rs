// EObjectFlags equivalent in Rust
#[repr(i32)]
#[derive(Debug, Copy, Clone)]
pub enum EObjectFlags {
    NoFlags = 0x00000000,

    Public = 0x00000001,
    Standalone = 0x00000002,
    MarkAsNative = 0x00000004,
    Transactional = 0x00000008,
    ClassDefaultObject = 0x00000010,
    ArchetypeObject = 0x00000020,
    Transient = 0x00000040,

    MarkAsRootSet = 0x00000080,
    TagGarbageTemp = 0x00000100,

    NeedInitialization = 0x00000200,
    NeedLoad = 0x00000400,
    KeepForCooker = 0x00000800,
    NeedPostLoad = 0x00001000,
    NeedPostLoadSubobjects = 0x00002000,
    NewerVersionExists = 0x00004000,
    BeginDestroyed = 0x00008000,
    FinishDestroyed = 0x00010000,

    BeingRegenerated = 0x00020000,
    DefaultSubObject = 0x00040000,
    WasLoaded = 0x00080000,
    TextExportTransient = 0x00100000,
    LoadCompleted = 0x00200000,
    InheritableComponentTemplate = 0x00400000,
    DuplicateTransient = 0x00800000,
    StrongRefOnFrame = 0x01000000,
    NonPIEDuplicateTransient = 0x02000000,
    Dynamic = 0x04000000,
    WillBeLoaded = 0x08000000,
}

// EFunctionFlags equivalent in Rust
#[repr(u32)]
#[derive(Debug, Copy, Clone)]
pub enum EFunctionFlags {
    None = 0x00000000,

    Final = 0x00000001,
    RequiredAPI = 0x00000002,
    BlueprintAuthorityOnly = 0x00000004,
    BlueprintCosmetic = 0x00000008,
    Net = 0x00000040,
    NetReliable = 0x00000080,
    NetRequest = 0x00000100,
    Exec = 0x00000200,
    Native = 0x00000400,
    Event = 0x00000800,
    NetResponse = 0x00001000,
    Static = 0x00002000,
    NetMulticast = 0x00004000,
    UbergraphFunction = 0x00008000,
    MulticastDelegate = 0x00010000,
    Public = 0x00020000,
    Private = 0x00040000,
    Protected = 0x00080000,
    Delegate = 0x00100000,
    NetServer = 0x00200000,
    HasOutParms = 0x00400000,
    HasDefaults = 0x00800000,
    NetClient = 0x01000000,
    DLLImport = 0x02000000,
    BlueprintCallable = 0x04000000,
    BlueprintEvent = 0x08000000,
    BlueprintPure = 0x10000000,
    EditorOnly = 0x20000000,
    Const = 0x40000000,
    NetValidate = 0x80000000,

    AllFlags = 0xFFFFFFFF,
}

// EClassFlags equivalent in Rust
#[repr(u32)]
#[derive(Debug, Copy, Clone)]
pub enum EClassFlags {
    CLASS_None = 0x00000000,
    Abstract = 0x00000001,
    DefaultConfig = 0x00000002,
    Config = 0x00000004,
    Transient = 0x00000008,
    Parsed = 0x00000010,
    MatchedSerializers = 0x00000020,
    ProjectUserConfig = 0x00000040,
    Native = 0x00000080,
    NoExport = 0x00000100,
    NotPlaceable = 0x00000200,
    PerObjectConfig = 0x00000400,
    ReplicationDataIsSetUp = 0x00000800,
    EditInlineNew = 0x00001000,
    CollapseCategories = 0x00002000,
    Interface = 0x00004000,
    CustomConstructor = 0x00008000,
    Const = 0x00010000,
    LayoutChanging = 0x00020000,
    CompiledFromBlueprint = 0x00040000,
    MinimalAPI = 0x00080000,
    RequiredAPI = 0x00100000,
    DefaultToInstanced = 0x00200000,
    TokenStreamAssembled = 0x00400000,
    HasInstancedReference = 0x00800000,
    Hidden = 0x01000000,
    Deprecated = 0x02000000,
    HideDropDown = 0x04000000,
    GlobalUserConfig = 0x08000000,
    Intrinsic = 0x10000000,
    Constructed = 0x20000000,
    ConfigDoNotCheckDefaults = 0x40000000,
    NewerVersionExists = 0x80000000,
}

// EClassCastFlags equivalent in Rust
#[repr(u64)]
#[derive(Debug, Copy, Clone)]
pub enum EClassCastFlags {
    None = 0x0000000000000000,

    Field = 0x0000000000000001,
    Int8Property = 0x0000000000000002,
    Enum = 0x0000000000000004,
    Struct = 0x0000000000000008,
    ScriptStruct = 0x0000000000000010,
    Class = 0x0000000000000020,
    ByteProperty = 0x0000000000000040,
    IntProperty = 0x0000000000000080,
    FloatProperty = 0x0000000000000100,
    UInt64Property = 0x0000000000000200,
    ClassProperty = 0x0000000000000400,
    UInt32Property = 0x0000000000000800,
    InterfaceProperty = 0x0000000000001000,
    NameProperty = 0x0000000000002000,
    StrProperty = 0x0000000000004000,
    Property = 0x0000000000008000,
    ObjectProperty = 0x0000000000010000,
    BoolProperty = 0x0000000000020000,
    UInt16Property = 0x0000000000040000,
    Function = 0x0000000000080000,
    StructProperty = 0x0000000000100000,
    ArrayProperty = 0x0000000000200000,
    Int64Property = 0x0000000000400000,
    DelegateProperty = 0x0000000000800000,
    NumericProperty = 0x0000000001000000,
    MulticastDelegateProperty = 0x0000000002000000,
    ObjectPropertyBase = 0x0000000004000000,
    WeakObjectProperty = 0x0000000008000000,
    LazyObjectProperty = 0x0000000010000000,
    SoftObjectProperty = 0x0000000020000000,
    TextProperty = 0x0000000040000000,
    Int16Property = 0x0000000080000000,
    DoubleProperty = 0x0000000100000000,
    SoftClassProperty = 0x0000000200000000,
    Package = 0x0000000400000000,
    Level = 0x0000000800000000,
    Actor = 0x0000001000000000,
    PlayerController = 0x0000002000000000,
    Pawn = 0x0000004000000000,
    SceneComponent = 0x0000008000000000,
    PrimitiveComponent = 0x0000010000000000,
    SkinnedMeshComponent = 0x0000020000000000,
    SkeletalMeshComponent = 0x0000040000000000,
    Blueprint = 0x0000080000000000,
    DelegateFunction = 0x0000100000000000,
    StaticMeshComponent = 0x0000200000000000,
    MapProperty = 0x0000400000000000,
    SetProperty = 0x0000800000000000,
    EnumProperty = 0x0001000000000000,
    USparseDelegateFunction = 0x0002000000000000,
    FMulticastInlineDelegateProperty = 0x0004000000000000,
    FMulticastSparseDelegateProperty = 0x0008000000000000,
    FFieldPathProperty = 0x0010000000000000,
    FLargeWorldCoordinatesRealProperty = 0x0080000000000000,
    FOptionalProperty = 0x0100000000000000,
    FVValueProperty = 0x0200000000000000,
    UVerseVMClass = 0x0400000000000000,
    FVRestValueProperty = 0x0800000000000000,
}

// EPropertyFlags equivalent in Rust
#[repr(u64)]
#[derive(Debug, Copy, Clone)]
pub enum EPropertyFlags {
    None = 0x0000000000000000,

    Edit = 0x0000000000000001,
    ConstParm = 0x0000000000000002,
    BlueprintVisible = 0x0000000000000004,
    ExportObject = 0x0000000000000008,
    BlueprintReadOnly = 0x0000000000000010,
    Net = 0x0000000000000020,
    EditFixedSize = 0x0000000000000040,
    Parm = 0x0000000000000080,
    OutParm = 0x0000000000000100,
    ZeroConstructor = 0x0000000000000200,
    ReturnParm = 0x0000000000000400,
    DisableEditOnTemplate = 0x0000000000000800,

    Transient = 0x0000000000002000,
    Config = 0x0000000000004000,

    DisableEditOnInstance = 0x0000000000010000,
    EditConst = 0x0000000000020000,
    GlobalConfig = 0x0000000000040000,
    InstancedReference = 0x0000000000080000,

    DuplicateTransient = 0x0000000000200000,
    SubobjectReference = 0x0000000000400000,

    SaveGame = 0x0000000001000000,
    NoClear = 0x0000000002000000,

    ReferenceParm = 0x0000000008000000,
    BlueprintAssignable = 0x0000000010000000,
    Deprecated = 0x0000000020000000,
    IsPlainOldData = 0x0000000040000000,
    RepSkip = 0x0000000080000000,
    RepNotify = 0x0000000100000000,
    Interp = 0x0000000200000000,
    NonTransactional = 0x0000000400000000,
    EditorOnly = 0x0000000800000000,
    NoDestructor = 0x0000001000000000,

    AutoWeak = 0x0000004000000000,
    ContainsInstancedReference = 0x0000008000000000,
    AssetRegistrySearchable = 0x0000010000000000,
    SimpleDisplay = 0x0000020000000000,
    AdvancedDisplay = 0x0000040000000000,
    Protected = 0x0000080000000000,
    BlueprintCallable = 0x0000100000000000,
    BlueprintAuthorityOnly = 0x0000200000000000,
    TextExportTransient = 0x0000400000000000,
    NonPIEDuplicateTransient = 0x0000800000000000,
    ExposeOnSpawn = 0x0001000000000000,
    PersistentInstance = 0x0002000000000000,
    UObjectWrapper = 0x0004000000000000,
    HasGetValueTypeHash = 0x0008000000000000,
    NativeAccessSpecifierPublic = 0x0010000000000000,
    NativeAccessSpecifierProtected = 0x0020000000000000,
    NativeAccessSpecifierPrivate = 0x0040000000000000,
    SkipSerialization = 0x0080000000000000,
}